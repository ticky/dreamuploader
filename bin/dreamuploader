#!/usr/bin/env python3

import base64
import sys
from htmlmin.minify import html_minify
from jinja2 import Environment, PackageLoader, select_autoescape
import klein
import os
from twisted.python import log
from twisted.web import server
from twisted.web.static import File
from twisted.internet import reactor
from twisted.internet.endpoints import serverFromString

from dreamuploader import DreamuploaderRequest, VMSData

log.startLogging(sys.stdout)

env = Environment(
    loader=PackageLoader('dreamuploader', 'templates'),
    autoescape=select_autoescape(['html'])
)

app = klein.Klein()

@app.route('/', methods=['GET'])
def index(request):
    request.setHeader('Content-Type', 'text/html')
    template = env.get_template('index.html')
    return html_minify(template.render())

@app.route('/upload', methods=['POST'])
def post(request):
    print(request.args)

    if request.args.get(b'vmfile') is None:
        return 'You must select a file!'

    if request.args.get(b'filename') is None or len(request.args.get(b'filename')[0]) < 4:
        return 'You must type a file name, and it needs to be at least four characters!'

    try:
        filename = request.args.get(b'filename')[0].decode()
    except UnicodeDecodeError:
        return 'Unsupported characters in filename. Please make sure you are using the US keyboard if you have the option.'

    vmi_filename = filename + '.VMI'
    vms_filename = filename + '.VMS'

    # TODO: Check file isn't traversing up beyond current working directory

    vmsdata = VMSData.from_post_bytes(request.args.get(b'vmfile')[0])

    vmi_file = open(vmi_filename, 'bx')
    vms_file = open(vms_filename, 'bx')

    vmi_file.write(vmsdata.to_vmi(filename))
    vms_file.write(vmsdata.vms)

    vmi_file.close()
    vms_file.close()

    return 'File uploaded!'

@app.route('/files/', branch=True)
def files(request):
    directoryListing = File("./")
    directoryListing.contentTypes['.lcd'] = 'application/x-dreamcast-lcdimg'
    directoryListing.contentTypes['.vmi'] = 'application/x-dreamcast-vms-info'
    directoryListing.contentTypes['.vms'] = 'application/x-dreamcast-vms'
    return directoryListing

site = server.Site(app.resource())
site.requestFactory = DreamuploaderRequest

endpoint = serverFromString(reactor, "tcp:8080")
endpoint.listen(site)

reactor.run()
