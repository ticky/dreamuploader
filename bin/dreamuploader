#!/usr/bin/env python3

import base64
import sys
from htmlmin.minify import html_minify
from jinja2 import Environment, PackageLoader, select_autoescape
import klein
from twisted.python import log
from twisted.web import server
from twisted.web.static import File
from twisted.internet import reactor
from twisted.internet.endpoints import serverFromString

from dreamuploader import DreamuploaderRequest

log.startLogging(sys.stdout)

env = Environment(
    loader=PackageLoader('dreamuploader', 'templates'),
    autoescape=select_autoescape(['html'])
)

app = klein.Klein()

@app.route('/', methods=['GET'])
def index(request):
    request.setHeader('Content-Type', 'text/html')
    template = env.get_template('index.html')
    return html_minify(template.render())

@app.route('/upload', methods=['POST'])
def post(request):
    return 'File not yet uploaded!'

@app.route('/files/', branch=True)
def files(request):
    directoryListing = File("./")
    directoryListing.contentTypes['.lcd'] = 'application/x-dreamcast-lcdimg'
    directoryListing.contentTypes['.vmi'] = 'application/x-dreamcast-vms-info'
    directoryListing.contentTypes['.vms'] = 'application/x-dreamcast-vms'
    return directoryListing

site = server.Site(app.resource())
site.requestFactory = DreamuploaderRequest

endpoint = serverFromString(reactor, "tcp:8080")
endpoint.listen(site)

reactor.run()
